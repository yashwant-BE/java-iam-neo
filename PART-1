1)
import java.util.Scanner;

public class Main {
    public static void main(String args[]) {
        EBBill bill = new EBBill();
        bill.CalcBill();
    }
}

class EBBill {
    Scanner sc = new Scanner(System.in);

    public int consumerNo = sc.nextInt();
    public String consumerName = sc.next();
    public int prevMonthReading = sc.nextInt();
    public int currMonthReading = sc.nextInt();
    public String ebConnectionType = sc.next();
    public int unitsConsumed = currMonthReading - prevMonthReading;

    public void displayBill(double bill) {
        System.out.println("Consumer No.: " + consumerNo);
        System.out.println("Consumer Name: " + consumerName);
        System.out.println("Previous Month Reading: " + prevMonthReading);
        System.out.println("Current Month Reading: " + currMonthReading);
        System.out.println("Units Consumed: " + unitsConsumed);
        System.out.println("Electricity Connection Type: " + ebConnectionType);
        System.out.println("Bill Amount: " + bill);
    }

    public void CalcBill() {
        if (ebConnectionType.equalsIgnoreCase("Domestic")) {
            double billAmount = 0;
            if (unitsConsumed <= 100) {
                billAmount = unitsConsumed * 1;
            } else if (unitsConsumed <= 200) {
                billAmount = 100 * 1 + (unitsConsumed - 100) * 2.5;
            } else if (unitsConsumed <= 500) {
                billAmount = 100 * 1 + 100 * 2.5 + (unitsConsumed - 200) * 4;
            } else {
                billAmount = 100 * 1 + 100 * 2.5 + 300 * 4 + (unitsConsumed - 500) * 6;
            }
            displayBill(billAmount);
        } else {
            double billAmount = 0;
            if (unitsConsumed <= 100) {
                billAmount = unitsConsumed * 2;
            } else if (unitsConsumed <= 200) {
                billAmount = 100 * 2 + (unitsConsumed - 100) * 4.5;
            } else if (unitsConsumed <= 500) {
                billAmount = 100 * 2 + 100 * 4.5 + (unitsConsumed - 200) * 6;
            } else {
                billAmount = 100 * 2 + 100 * 4.5 + 300 * 6 + (unitsConsumed - 500) * 7;
            }
            displayBill(billAmount);
        }
    }
}
--------------------------
2)
import java.io.*;
import java.util.*;

public class Main
{
    public static void main(String args[])
    {
        KthSmallestElement kk = new KthSmallestElement();
    }
}

class KthSmallestElement
{
    KthSmallestElement()
    {
        int n,k;
        Scanner sc = new Scanner(System.in);
        n=sc.nextInt();
        ArrayList<Integer> arr = new ArrayList<Integer>();
        for(int i=0;i<n;i++)
        {
            arr.add(sc.nextInt());
        }
        Collections.sort(arr);
        k=sc.nextInt();
        System.out.println(arr.get(k-1));
    }
}
---------------------------------
3)
import java.util.Scanner;

class Main 
{
    public static void main(String[] args) 
    {
        Scanner sc = new Scanner(System.in);

        int n = sc.nextInt();
        int arr[] = new int[n];
        for (int i = 0; i < n; i++) 
        {
            arr[i] = sc.nextInt();
        }

        int targetSum = sc.nextInt();

        int foundSubarray = 0;
        for (int i = 0; i < n && foundSubarray==0; i++) 
        {
            int currSum = 0;
            for (int j = i; j < n; j++) 
            {
                currSum += arr[j];
                
                if (currSum == targetSum) 
                {
                    System.out.print("Subarray found: [ ");
                    for (int k = i; k <= j; k++) 
                    {
                        System.out.print(arr[k] + " ");
                    }
                    System.out.println("]");
                    foundSubarray = 1;
                    break;
                }
            }
        }

        if (foundSubarray==0) 
        {
            System.out.println("Subarray not found");
        }
    }
}
----------------------------------------------
4)
import java.util.*;

class Main 
{
    public static void main(String[] args) 
    {
        Scanner sc = new Scanner(System.in);

        int n = sc.nextInt();
        int arr[] = new int[n];
        for (int i = 0; i < n; i++) 
        {
            arr[i] = sc.nextInt();
        }

        Set<Integer> newarr = new LinkedHashSet<>();
        for (int num : arr) 
        {
            
            newarr.add(num);
        }

        StringBuilder sb = new StringBuilder();
        sb.append("Array with duplicates removed: [ ");
        for (int num : newarr) {
            sb.append(num).append(" ");
        }
        sb.append("]");

        System.out.println(sb);
    }
}
-------------------------------------
5)
import java.util.Scanner;

class NthDigitInSequence {
    public static void main(String[] args) 
    {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();

        int count = 0;
        int number = 1;
        int lastNumber = 0;

        while (count < n) 
        {
            lastNumber = number++;
            count += String.valueOf(lastNumber).length();
        }

        int diff = count - n;
        int temp = lastNumber / (int) Math.pow(10, diff);
        System.out.println(temp % 10);
    }
}
--------------------------------------
6)
import java.util.ArrayList;
import java.util.Scanner;

public class Main 
{
    public static void main(String[] args) 
    {
        ArrayList<String> list = new ArrayList<>();
        Scanner scanner = new Scanner(System.in);

        while (true) {
            int choice = scanner.nextInt();

            switch (choice) {
                case 1:
                    append(list, scanner.next());
                    break;
                case 2:
                    insert(list, scanner.next(), scanner.nextInt());
                    break;
                case 3:
                    search(list, scanner.next());
                    break;
                case 4:
                    listStrings(list, scanner.next().charAt(0));
                    break;
                case 5:
                    scanner.close();
                    System.out.println("Exiting.");
                    System.exit(0);
            }
        }
    }

    public static void append(ArrayList<String> list, String str) {
        list.add(str);
        System.out.println(str + " appended.");
    }

    public static void insert(ArrayList<String> list, String str, int index) {
        list.add(index, str);
        System.out.println(str + " inserted at index " + index + ".");
    }

    public static void search(ArrayList<String> list, String str) 
    {
        if (list.contains(str)) 
        {
            System.out.println(str + " found.");
        } 
        else 
        {
            System.out.println(str + " not found.");
        }
        
    }

    public static void listStrings(ArrayList<String> list, char letter) 
    {
        for (String str : list) 
        {
            if (str.charAt(0) == letter) 
            {
                System.out.println(str);
            }
        }
    }
}
------------------------------------------------
7)
import java.util.*;

class Main {

    public static void main(String[] args) 
    {
        Scanner scanner = new Scanner(System.in);
        String text = scanner.nextLine().toLowerCase();
        String words[] = text.split("\\W+");
        
        Map<String, Integer> dict = new LinkedHashMap<>();

        for (String word : words) 
        {
            if (dict.containsKey(word)) 
            {
                dict.put(word, dict.get(word) + 1);
            } else 
            {
                dict.put(word, 1);
            }
        }

        for (Map.Entry<String, Integer> entry : dict.entrySet()) 
        {
            System.out.println(entry.getKey() + ": " + entry.getValue());
        }
    }
}
-----------------------------------------
8)
import java.util.Scanner;

class Main 
{
    public static void main(String[] args) 
    {
        Scanner sc = new Scanner(System.in);
        String str = sc.next();
        int counter = 0;

        for (int i = 1; i < str.length(); i++) 
        {
            if (str.charAt(i) == '0' && str.charAt(i - 1) == '1') 
            {
                while (i < str.length() && str.charAt(i) == '0') 
                {
                    i++;
                }
                if (i == str.length()) 
                {
                    break;
                }
                if (str.charAt(i) == '1') 
                {
                    counter++;
                }
            }
        }

        System.out.println(counter);
    }
}
------------------------------------------
9)
import java.util.Scanner;

class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        String inputString = scanner.nextLine();

        String longestSeq = find_seq(inputString);

        if (longestSeq.isEmpty()) {
            System.out.println("No repeating sequence found");
        } else {
            System.out.println(longestSeq);
        }
    }

    public static String find_seq(String inputString) {
        int inputStringLength = inputString.length();
        String longestSeq = "";

        for (int i = 0; i < inputStringLength; i++) {
            for (int j = i + 1; j < inputStringLength; j++) {
                String sub = inputString.substring(i, j);

                for (int k = j; k < inputStringLength; k++) {
                    int len = sub.length();

                    if (k + len <= inputStringLength && sub.equals(inputString.substring(k, k + len))) {
                        if (len > longestSeq.length()) {
                            longestSeq = sub;
                        }
                    }
                }
            }
        }

        return longestSeq;
    }
}
-------------------------------------------------------
10)
import java.util.HashMap;
import java.util.Map;
import java.util.Scanner;

class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        String inputString = scanner.nextLine().toLowerCase();

        String words[] = inputString.split("\\W+");
        StringBuilder reversedString = new StringBuilder();
        
        for (int i = words.length - 1; i >= 0; i--) 
        {
            reversedString.append(words[i]).append(" ");
        }
        String outputString = reversedString.toString().trim();

        Map<Character, Integer> dict = new HashMap<>();
        for (char c : inputString.toCharArray()) 
        {
            if (Character.isLetter(c)) 
            {
                if (dict.containsKey(c)) 
                {
                    dict.put(c, dict.get(c) + 1);
                } 
                else 
                {
                    dict.put(c, 1);
                }
            }
        }

        System.out.println("Reversed string: " + outputString);
        System.out.println("Letter frequencies:");
        for (Map.Entry<Character, Integer> entry : dict.entrySet()) 
        {
            System.out.println(entry.getKey() + ": " + entry.getValue());
        }
    }
}
--------------------------------
CobaltCrawlerΣ

